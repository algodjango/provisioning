---
# SETUP
- name: check if admin_user can connect
  hosts: all:!windows:!macos
  gather_facts: false
  vars:
    ansible_user: "{{ admin_user }}"
  tasks:
    - name: ping as admin_user
      ping:
      ignore_unreachable: true
      ignore_errors: true
      changed_when: false
      register: admin_user_ping

    - name: change user to superuser if admin_user can't connect
      when: admin_user_ping.unreachable is defined
      connection: local
      set_fact:
        ansible_user: "{{ superuser if superuser is defined else 'root' }}"

- name: setup OS requirements and information
  hosts: all
  remote_user: "{{ admin_user }}"
  roles:
     - role: distro_checks

- name: create admin_user
  hosts: all:!windows:!macos
  remote_user: "{{ superuser if superuser is defined else 'root' }}"
  roles:
    - role: create_user
      when: admin_user_ping.unreachable is defined

# INSTALL NODE AND SERVICE
- name: install using package manager
  hosts: all:!windows:!macos
  remote_user: "{{ admin_user }}"
  roles:
    - role: install_deb
      when: not updater_install and os_family == "Debian"
    - role: install_rpm
      when: not updater_install and os_distribution == "CentOS"
    # # FIXME https://github.com/algorand/go-algorand/issues/1489#issuecomment-875033099
    #   when: not updater_install and os_family in ("Suse", "RedHat")

- name: install using updater script
  hosts: all:!windows
  remote_user: "{{ admin_user }}"
  roles:
    - role: install_other
      when: updater_install
    - role: systemd_service
      when: updater_install and os_family not in ("Darwin", "Alpine")
    - role: launchd_daemon
      when: updater_install and os_family == "Darwin"
    - role: openrc_service
      when: updater_install and os_family == "Alpine"
    - role: update_setup
      when: updater_install

- name: install using installation binary
  hosts: windows
  remote_user: "{{ admin_user }}"
  roles:
    - role: install_win

# POST-INSTALL CONFIGURATION
- name: node configuration
  hosts: all
  remote_user: "{{ admin_user }}"
  roles:
    - role: network_configuration
      when: os_family != "Windows"
    - role: node_sync
      when: fast_catchup
    - role: telemetry
      when: os_family != "Windows"
