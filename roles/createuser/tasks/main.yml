---
- name: ensure group for admin_user exists
  group:
    name: "{{ admin_user_group }}"
    state: present
  tags: createuser

- name: create admin_user
  user:
    name: "{{ admin_user }}"
    group: "{{ admin_user_group }}"
    state: present
    createhome: yes
    shell: /bin/bash
  when: os_distribution != "Alpine"
  tags: createuser

- name: create admin_user in Alpine (user password required)
  user:
    name: "{{ admin_user }}"
    group: "{{ admin_user_group }}"
    password: '{{ query("community.general.random_string")[0] | password_hash("sha256") }}'
    update_password: on_create
    state: present
    createhome: yes
    shell: /bin/bash
  when: os_distribution == "Alpine"
  tags: createuser

- name: allow user to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    line: '{{ admin_user }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  become: yes
  tags: createuser

- name: set up authorized keys for the user
  authorized_key:
    user: "{{ admin_user }}"
    key: "{{ item }}"
  with_file:
    - ~/.ssh/id_rsa.pub
  ignore_errors: yes
  tags: createuser

- name: check if Ansible temporary user directory exists
  file:
    path: "{{ admin_home_directory }}/.ansible/tmp"
    state: directory
    mode: 0700
    owner: "{{ admin_user }}"
    group: "{{ admin_user_group }}"
  tags: algorand-node-setup
