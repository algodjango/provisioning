---
# - name: base
#   ansible.builtin.debug:
#     msg:
#     - "{{ hostvars[inventory_hostname].ansible_distribution }}"
#     - "{{ hostvars[inventory_hostname].ansible_distribution_version }}"
#     - "{{ hostvars[inventory_hostname].ansible_os_family }}"
#   tags: distro-checks, variables

- name: set common OS and Algorand variables
  set_fact:
    os_family: "{{ ansible_os_family }}"
    os_distribution: "{{ ansible_distribution }}"
    os_version: "{{ ansible_distribution_version }}"
    goal_executable: "goal"
    diagcfg_executable: "diagcfg"
  tags: distro-checks, variables

- name: set variables specific to Linux
  set_fact:
    admin_home_directory: "/home/{{ admin_user }}/"
  when: not os_family in ("Darwin", "Windows")
  tags: distro-checks, variables

- name: set variables specific to Mac OS
  set_fact:
    admin_home_directory: "/Users/{{ admin_user }}/"
    admin_user_group: staff
  when: os_family == "Darwin"
  tags: distro-checks, variables

- name: set variables specific to MS Windows
  set_fact:
    admin_home_directory: "C:\\Users\\{{ admin_user }}\\"
    node_directory: "{{ ansible_facts.env['ProgramFiles'] }}\\Algorand\\"
    node_data_directory: "{{ ansible_facts.env['ProgramData'] }}\\Algorand\\data\\"
    algorand_network_base: "{{ 'testnet' if algorand_network != 'mainnet' else 'mainnet' }}"
  when: os_family == "Windows"
  tags: distro-checks, variables

- name: set variable indicating should updater be used for node installing
  set_fact:
    updater_install: '{{ not use_package_manager or not os_family in ("Debian", "RedHat") }}'
  tags: distro-checks, variables

- name: change node data directory if applicable
  set_fact:
    node_data_directory: "{{ node_data_directory[:-1] + '_' + algorand_network + '/' }}"
  when: not common_data_directory and algorand_network != 'mainnet' and os_family != "Windows"
  tags: distro-checks, variables

- name: set variable for node directory needs relocation
  set_fact:
    node_directory_relocated: "{{ updater_install and not os_family in ('Darwin', 'Windows') and node_directory.startswith('/home/') and ansible_selinux is defined and ansible_selinux and ansible_selinux.status == 'enabled' }}"
  tags: distro-checks, variables

- name: relocate node directory
  ansible.builtin.debug:
    msg: Node directory relocated out from /home/ and set to /opt/algorand_node because SELinux is enabled
  when: node_directory_relocated
  tags: distro-checks, variables

- name: relocate node directory from /home/ directory when SELinux is enabled
  set_fact:
    node_directory: "/opt/algorand_node/"
  when: node_directory_relocated
  tags: distro-checks, variables

# ansible_distribution (ansible_distribution_version) ansible_os_family

# Fedora (34) RedHat
# Debian (10) Debian
# Ubuntu (20.04) Debian
# openSUSE Leap (15.3) Suse
# MacOSX (10.15.7) Darwin
# Microsoft Windows 10 Pro (10.0.19042.0) Windows
# Archlinux (21.0.7) Archlinux
# Rocky (8.4) RedHat
# AlmaLinux (8.4) RedHat
# OracleLinux (8.4) RedHat
# Mageia (8) Mageia
# CentOS (7.9) RedHat
# CentOS (8.4) RedHat
# Alpine (3.14.0) Alpine
# Ubuntu (18.04) Debian
# Ubuntu (21.04) Debian
# Debian (11) Debian
# Solus (4.3) Solus
