---
- name: read the logging configuration file content for package manager
  ansible.builtin.slurp:
    src: "{{ node_directory }}.algorand/logging.config"
  become: yes
  register: logging_configuration_package_manager
  when: not updater_install
  tags: telemetry

- name: read the logging configuration file content for updater
  ansible.builtin.slurp:
    src: "{{ admin_home_directory }}.algorand/logging.config"
  register: logging_configuration_updater
  when: updater_install
  tags: telemetry

- name: set telemetry config variable for package manager
  set_fact:
    telemetry_config: "{{ logging_configuration_package_manager['content'] | b64decode }}"
  when: not updater_install
  tags: telemetry

- name: set telemetry config variable for updater
  set_fact:
    telemetry_config: "{{ logging_configuration_updater['content'] | b64decode }}"
  when: updater_install
  tags: telemetry

- name: pre-set telemetry Boolean variables
  set_fact:
    telemetry_currently_enabled: "{{ telemetry_config['Enable'] }}"
    telemetry_without_hostname: "{{ not use_hostname_for_telemetry and fixed_name_for_telemetry == '' }}"
    telemetry_current_empty_hostname: "{{ telemetry_config['Name'] == ' ' }}"
    telemetry_current_fixed_hostname: "{{ telemetry_config['Name'] == fixed_name_for_telemetry }}"
    telemetry_current_hostname: "{{ telemetry_config['Name'] == inventory_hostname }}"
  tags: telemetry

- name: disable telemetry
  command: "{{ diagcfg_executable }} telemetry disable"
  args:
    chdir: "{{ node_directory }}"
  become: yes
  become_user: "{{ goal_user }}"
  when: not enable_telemetry and telemetry_currently_enabled
  tags: telemetry

- name: enable telemetry
  command: "{{ diagcfg_executable }} telemetry enable"
  args:
    chdir: "{{ node_directory }}"
  become: yes
  become_user: "{{ goal_user }}"
  when: enable_telemetry and not telemetry_currently_enabled
  tags: telemetry

- name: provide empty hostname for telemetry
  command: '{{ diagcfg_executable }} telemetry name -n " "'
  args:
    chdir: "{{ node_directory }}"
  become: yes
  become_user: "{{ goal_user }}"
  when: enable_telemetry and telemetry_without_hostname and not telemetry_current_empty_hostname
  tags: telemetry

- name: provide fixed hostname for telemetry
  command: '{{ diagcfg_executable }} telemetry name -n "{{ fixed_name_for_telemetry }}"'
  args:
    chdir: "{{ node_directory }}"
  become: yes
  become_user: "{{ goal_user }}"
  when: enable_telemetry and not use_hostname_for_telemetry and fixed_name_for_telemetry | length > 0 and not telemetry_current_fixed_hostname
  tags: telemetry

- name: provide machine's hostname for telemetry
  command: '{{ diagcfg_executable }} telemetry name -n "{{ inventory_hostname }}"'
  args:
    chdir: "{{ node_directory }}"
  become: yes
  become_user: "{{ goal_user }}"
  when: enable_telemetry and use_hostname_for_telemetry and not telemetry_current_hostname
  tags: telemetry
