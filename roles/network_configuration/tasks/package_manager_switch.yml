---
- name: copy {{ algorand_network }} genesis file to data directory
  copy:
    src: "{{ node_data_directory }}/genesis/{{ algorand_network }}/genesis.json"
    dest: "{{ node_data_directory }}/genesis.json"
    remote_src: yes
    owner: "{{ goal_user }}"
    group: "{{ goal_user_group }}"
    mode: 0644
  register: network_switched
  become: yes
  tags: switch-network

- name: restart Algorand service
  systemd:
    name: algorand
    state: restarted
  become: yes
  when: network_switched.changed
  tags: switch-network

- name: ensure Algorand service is in a running state
  service:
    name: algorand
    state: started
  register: algorand_service_active
  until: algorand_service_active.status.ActiveState == "active"
  retries: 5
  delay: 5
  become: yes
  tags: switch-network

- name: wait until the file {{ node_data_directory }}/algod.net is present
  wait_for:
    path: "{{ node_data_directory }}/algod.net"
  become: yes
  tags: switch-network

- name: ensure Algorand runs in {{ algorand_network }}
  command: "goal node status -d {{ node_data_directory }}"
  register: node_status
  failed_when: 'algorand_network|string not in node_status.stdout'
  changed_when: false
  become: yes
  become_user: "{{ goal_user }}"
  tags: switch-network
